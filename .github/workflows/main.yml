name: PDQA CI CD
run-name: ${{ github.actor }} Running Pipeline
on:
    pull_request: 
      types:
        - closed
      branches:
        - feature/codebase-combine
    push:
      branches:
        - feature/codebase-combine

jobs: 
    build_develop:
        name: Build and Push Docker Image
        if: github.ref == 'refs/heads/feature/codebase-combine'
        environment: develop
        runs-on: ubuntu-latest
        outputs:
          output1: ${{ steps.step1.outputs.sha }}

        steps:
            - name: Checkout feature/codebase-combine
              uses: actions/checkout@v4

            - id: step1
              run: |
                echo "::set-output name=sha::$(echo $GITHUB_SHA)"
                echo $GITHUB_SHA > $GITHUB_WORKSPACE/_meta 

            # - uses: dorny/paths-filter@v3
            #   id: filter
            #   with:
            #     filters: |
            #       server:
            #         - 'server/**'
            #       client:
            #         - 'client/**'

            -   name: Log in to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Build Server Container Image
                # if: steps.filter.outputs.server == 'true'
                env: 
                    KAFKA_BROKER_HOST: ${{ vars.KAFKA_BROKER_HOST }}

                run: |
                    docker build -f ./Dockerfile.backend --build-arg KAFKA_BROKER_HOST=$KAFKA_BROKER_HOST \
                    -t ghcr.io/curiapp/lasta-hub/pdqa-backend:$(echo $GITHUB_SHA | head -c7) .

            -   name: Push Server Image to GitHub Container Registry
                # if: steps.filter.outputs.server == 'true'
                run: |
                      docker push ghcr.io/curiapp/lasta-hub/pdqa-backend:$(echo $GITHUB_SHA | head -c7)

            -   name: Build Frontend Container Image
                # if: steps.filter.outputs.client == 'true'
                env: 
                    FRONTEND_PORT: ${{ vars.FRONTEND_PORT }}

                run: |
                    docker build -f ./Dockerfile.frontend --build-arg   PORT=$FRONTEND_PORT \
                    -t ghcr.io/curiapp/lasta-hub/pdqa-frontend:$(echo $GITHUB_SHA | head -c7) .

            -   name: Push Server Image to GitHub Container Registry
                # if: steps.filter.outputs.client == 'true'
                run: |
                      docker push ghcr.io/curiapp/lasta-hub/pdqa-frontend:$(echo $GITHUB_SHA | head -c7)
              
    gitops_develop:
        name: Update GitOps Image Tag
        needs: build_develop
        if: github.ref == 'refs/heads/feature/codebase-combine'
        runs-on: ubuntu-latest
        steps:
        -   name: Clone GitOps repository
            uses: actions/checkout@v4
            with:
                repository: curiapp/dev-ops
                token: ${{ secrets.PAT }}
                ref: master
        
        -   name: Kustomize CBI-develop Server
            if: github.repository == 'curiapp/lasta-hub'
            run: |
                cd overlays/develop
                SHA=$(echo ${{needs.build_develop.outputs.output1}} | head -c7)
                kustomize edit set image ghcr.io/curiapp/lasta-hub/pdqa-backend:$SHA
                git config user.name github-actions[bot]
                git config user.email 41898282+github-actions[bot]@users.noreply.github.com
                git add .
                git commit -m "version-$SHA"
                git push https://x-access-token:${{ secrets.PAT }}@github.com/curiapp/dev-ops.git

        -   name: Kustomize CBI-develop Frontend
            if: github.repository == 'curiapp/lasta-hub'
            run: |
                cd overlays/develop
                SHA=$(echo ${{needs.build_develop.outputs.output1}} | head -c7)
                kustomize edit set image ghcr.io/curiapp/lasta-hub/pdqa-frontend:$SHA
                git config user.name github-actions[bot]
                git config user.email 41898282+github-actions[bot]@users.noreply.github.com
                git add .
                git commit -m "version-$SHA"
                git push https://x-access-token:${{ secrets.PAT }}@github.com/curiapp/dev-ops.git
 
    # develop-deploy:
    #     needs: gitops_develop
    #     runs-on: ubuntu-latest

